name: Playwright and Jest Tests
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  GOOGLE_CLIENT_ID: ${{secrets.GOOGLE_CLIENT_ID}}
  GOOGLE_CLIENT_SECRET: ${{secrets.GOOGLE_CLIENT_SECRET}}

# Add concurrency configuration
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches: [main, master]
  push:
    branches: [main, master]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      # Environment variables for local development and testing
      NEXT_PUBLIC_SUPABASE_URL: http://localhost:54321
      NEXT_PUBLIC_SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
      SUPABASE_SERVICE_ROLE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
      NEXT_PUBLIC_SITE_URL: http://localhost:3000

    steps:
      # Checkout the repository and set up Node.js
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # Install project dependencies
      - name: Install dependencies
        run: cd client && npm install

      # Vercel CLI:
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_API_TOKEN }}
      - name: Copy Vercel Environment Variables
        run: vercel env pull ./client/.env.local --yes --environment=preview --token=${{ secrets.VERCEL_API_TOKEN }}

      # Set up Supabase CLI
      - uses: supabase/setup-cli@v1
        with:
          version: latest

      # Kill any processes using the required ports
      - name: Kill processes using Supabase ports
        run: |
          sudo lsof -ti:54321,54322,54323,54324,54325,54326,54327,54328 | xargs -r sudo kill -9

      # Start Supabase with retries
      - name: Start Supabase
        run: |
          max_attempts=3
          attempt=1
          while [ $attempt -le $max_attempts ]; do
            echo "Attempt $attempt to start Supabase..."
            if supabase start; then
              echo "Supabase started successfully"
              break
            else
              echo "Attempt $attempt failed"
              # Kill any hanging processes before retry
              sudo lsof -ti:54321,54322,54323,54324,54325,54326,54327,54328 | xargs -r sudo kill -9
              if [ $attempt -eq $max_attempts ]; then
                echo "All attempts failed"
                exit 1
              fi
              attempt=$((attempt+1))
              sleep 5
            fi
          done

      # Run Jest tests
      - name: Run Jest tests
        run: cd client && npm run test

      # Install Playwright
      - name: Install Playwright
        run: cd client && npx playwright install --with-deps

      # Run Playwright tests
      - name: Run Playwright tests
        run: cd client && npx playwright test

      # Upload Playwright report
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: client/playwright-report/
          retention-days: 30

  deploy:
    # NOTE IF YOU USE THIS YOU WILL GET DUPLICATE DEPLOYMENTS
    # Cancel the automatic Github deployment integration within Vercel to reduce
    # Your deployment counts back to 1x per push/PR close on main/master
    needs: test
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Debug: List directory contents
      - name: List directory contents
        run: |
          echo "Current directory:"
          pwd
          echo "Contents of current directory:"
          ls -R

      # Vercel CLI:
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_API_TOKEN }}
      - name: Copy Vercel Environment Variables
        run: vercel env pull ./client/.env.local --yes --environment=preview --token=${{ secrets.VERCEL_API_TOKEN }}

      # Build Project Artifacts
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_API_TOKEN }}

      # Deploy Project Artifacts to Vercel
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_API_TOKEN }}
